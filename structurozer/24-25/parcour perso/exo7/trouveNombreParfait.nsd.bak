<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.30-13" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" author="petit" created="2024-09-24" changedby="petit" changed="2024-09-24" origin="Structorizer 3.30-13" text="&#34;trouveNombreParfait&#34;" comment="&#34;&#34;" color="ffffff" type="program" style="nice">
	<children>
		<for text="&#34;for (int nombre = a; nombre  &#60;= b; nombre++)&#34;" comment="&#34;&#34;" counterVar="dummy_counter" startValue="(int nombre = a; nombre  &#60;= b; nombre++)" stepConst="1" style="FREETEXT" color="ffffff" disabled="0">
			<qFor>
				<instruction text="&#34;int sommeDiviseurs = 1&#34;,&#34;bool estParfait = false&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
				<for text="&#34;for (int j = 2; j &#60;= nombre / 2; j++)&#34;" comment="&#34;&#34;" counterVar="dummy_counter" startValue="(int j = 2; j &#60;= nombre / 2; j++)" stepConst="1" style="FREETEXT" color="ffffff" disabled="0">
					<qFor>
						<alternative text="&#34;if (nombre % j == 0)&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
							<qTrue>
								<instruction text="&#34;sommeDiviseurs += j&#34;,&#34;estParfait = true&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
							</qTrue>
							<qFalse color="ffffff">
							</qFalse>
						</alternative>
					</qFor>
				</for>
				<alternative text="&#34;if (estParfait = true)&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
					<qTrue>
						<instruction text="&#34;message += nombre.ToString() + &#34;&#34;, &#34;&#34;&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
					</qTrue>
					<qFalse color="ffffff">
					</qFalse>
				</alternative>
			</qFor>
		</for>
	</children>
</root>